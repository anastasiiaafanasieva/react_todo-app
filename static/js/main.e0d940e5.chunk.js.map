{"version":3,"sources":["request/api.js","components/TodoContext.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoForm.jsx","App.jsx","index.js"],"names":["urlTodo","getDataFromServer","url","options","fetch","then","response","ok","json","Promise","reject","Error","getTodos","postNewTodo","title","a","method","headers","body","JSON","stringify","completed","userId","updateTodo","key","value","todoId","deleteTodo","TodoContext","React","createContext","todos","setTodos","user","error","TodoProvider","children","useState","setUser","setError","useEffect","request","result","catch","err","message","contextValue","useMemo","Provider","TodoItem","item","useContext","edit","setEdit","newTitle","setNewTitle","checkedTodo","find","todo","id","changeTitle","handleDestroy","filter","className","classNames","editing","type","checked","onClick","status","onDoubleClick","onChange","event","target","onBlur","onKeyDown","e","preventDefault","trim","TodoList","map","TodoForm","useParams","input","setInput","countActiveTodos","setCountActiveTodos","countCompletedTodos","setCountCompletedTodos","selectedUsersTodos","visibleTodos","handleSubmit","activeTodos","length","completedTodos","handleCountTodo","name","onSubmit","placeholder","forEach","htmlFor","to","hidden","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0d940e5.chunk.js","sourcesContent":["const urlTodo = 'https://mate.academy/students-api/todos';\nconst urlUsers = 'https://mate.academy/students-api/users';\nconst myUserID = 3881;\n\nexport const getDataFromServer = (url, options) => fetch(url, options)\n  .then(response => (response.ok\n    ? response.json()\n    : Promise.reject(new Error('Cannot load data from server'))));\n\nexport const getTodos = () => getDataFromServer(urlTodo);\n\nexport const getMyUser = () => getDataFromServer(`${urlUsers}/${myUserID}`);\n\nexport const postNewTodo = async(title) => {\n  await getDataFromServer(urlTodo, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      title,\n      completed: false,\n      userId: myUserID,\n    }),\n  });\n};\n\nexport const updateTodo = async(key, value, todoId) => {\n  await getDataFromServer(`${urlTodo}/${todoId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      [key]: value,\n    }),\n  });\n};\n\nexport const deleteTodo = async(todoId) => {\n  await getDataFromServer(`${urlTodo}/${todoId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport * as request from '../request/api';\n\nexport const TodoContext = React.createContext({\n  todos: [],\n  setTodos: () => {},\n  user: [],\n  error: '',\n});\n\nexport const TodoProvider = ({ children }) => {\n  const [todos, setTodos] = useState([]);\n  const [user, setUser] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    request.getTodos()\n      .then(result => setTodos(result))\n      .catch(err => setError(err.message));\n  }, []);\n\n  useEffect(() => {\n    request.getMyUser()\n      .then(result => setUser(result))\n      .catch(err => setError(err.message));\n  }, []);\n\n  const contextValue = useMemo(() => ({\n    todos,\n    setTodos,\n    user,\n    error,\n  }), [todos, user, error]);\n\n  return (\n    <TodoContext.Provider value={contextValue}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useContext, useState } from 'react';\nimport * as request from '../request/api';\n\nimport { TodoContext } from './TodoContext';\n\nexport const TodoItem = ({ item }) => {\n  const { todos, setTodos } = useContext(TodoContext);\n  const [edit, setEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState(item.title);\n  const checkedTodo = todos.find(todo => todo.id === item.id);\n\n  const handleCheckbox = (status) => {\n    setTodos([\n      ...todos,\n      checkedTodo.completed = status,\n    ]);\n\n    request.updateTodo('completed', status, item.id);\n  };\n\n  const changeTitle = () => {\n    setTodos([\n      ...todos,\n      checkedTodo.title = newTitle,\n    ]);\n\n    request.updateTodo('title', newTitle, item.id);\n\n    setEdit(false);\n  };\n\n  const handleDestroy = () => {\n    setTodos(todos.filter(todo => todo.id !== item.id));\n\n    request.deleteTodo(item.id);\n  };\n\n  const handleOnBlur = () => {\n    changeTitle(item.id);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      setNewTitle(item.title);\n      setEdit(false);\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (newTitle.trim() === '') {\n        handleDestroy();\n      } else {\n        changeTitle();\n      }\n    }\n  };\n\n  return (\n    <li\n      className={classNames(\n        { completed: item.completed,\n          editing: edit },\n      )}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={item.completed}\n          id={classNames(\n            {\n              'toggle-completed': item.completed,\n              'toggle-view': !item.completed,\n              'toggle-editing': edit,\n            },\n          )}\n          onClick={() => handleCheckbox(!item.completed)}\n        />\n        <label onDoubleClick={() => setEdit(true)}>\n          {item.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={handleDestroy}\n          data-cy=\"deleteTodo\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        id={edit ? 'editTodo' : null}\n        value={newTitle}\n        onChange={(event) => {\n          setNewTitle(event.target.value);\n        }}\n        onBlur={handleOnBlur}\n        onKeyDown={e => handleKeyDown(e)}\n      />\n    </li>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ todos }) => (\n\n  <ul className=\"todo-list\">\n    {todos.map(item => (\n      <TodoItem item={item} key={item.id} />\n    ))}\n  </ul>\n);\n","/* eslint-disable no-param-reassign */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { TodoContext } from './TodoContext';\nimport { TodoList } from './TodoList';\nimport * as request from '../request/api';\n\nexport const TodoForm = () => {\n  const { todos, setTodos, user, error } = useContext(TodoContext);\n  const { status } = useParams();\n  const [input, setInput] = useState('');\n  const [countActiveTodos, setCountActiveTodos] = useState(0);\n  const [countCompletedTodos, setCountCompletedTodos] = useState(0);\n\n  const selectedUsersTodos = todos.filter(todo => todo.userId === user.id);\n\n  const visibleTodos = selectedUsersTodos.filter((todo) => {\n    switch (status) {\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n      default:\n        return todo;\n    }\n  });\n\n  const handleInput = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = async(event) => {\n    event.preventDefault();\n\n    if (input) {\n      await request.postNewTodo(input);\n      await request.getTodos().then(result => setTodos(result));\n\n      setInput('');\n    }\n  };\n\n  const handleCountTodo = () => {\n    const activeTodos = visibleTodos\n      .filter(todo => todo.completed === false).length;\n    const completedTodos = visibleTodos\n      .filter(todo => todo.completed === true).length;\n\n    setCountActiveTodos(activeTodos);\n    setCountCompletedTodos(completedTodos);\n  };\n\n  const handleCompleteAll = () => {\n    if (countActiveTodos > 0) {\n      selectedUsersTodos.forEach((todo) => {\n        if (todo.completed === false) {\n          setTodos([...todos, todo.completed = true]);\n\n          request.updateTodo('completed', true, todo.id);\n        }\n      });\n    }\n\n    if (countActiveTodos === 0) {\n      selectedUsersTodos.forEach((todo) => {\n        setTodos([...todos, todo.completed = false]);\n\n        request.updateTodo('completed', false, todo.id);\n      });\n    }\n  };\n\n  const handleClearAll = () => {\n    setTodos(selectedUsersTodos.filter(todo => todo.completed === false));\n\n    visibleTodos.forEach((todo) => {\n      if (todo.completed === true) {\n        request.deleteTodo(todo.id);\n      }\n    });\n  };\n\n  useEffect(() => {\n    handleCountTodo();\n  }, [visibleTodos]);\n\n  if (error) {\n    return <h1>{error}</h1>;\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <p className=\"user-title\">{`Todo's of ${user.name}`}</p>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={input}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            data-cy=\"createTodo\"\n            onChange={handleInput}\n          />\n        </form>\n      </header>\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onClick={handleCompleteAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList todos={visibleTodos} />\n      </section>\n      {selectedUsersTodos.length > 0 && (\n      <footer className=\"footer\">\n        <span className=\"todo-count\" data-cy=\"todosCounter\">\n          {`${countActiveTodos} items left`}\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <Link\n              to=\"/\"\n              className={!status ? 'selected' : ''}\n            >\n              All\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/active\"\n              className={status === 'active' ? 'selected' : ''}\n            >\n              Active\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/completed\"\n              className={status === 'completed' ? 'selected' : ''}\n            >\n              Completed\n            </Link>\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          hidden={!countCompletedTodos}\n          onClick={handleClearAll}\n        >\n          Clear completed\n        </button>\n      </footer>\n      )}\n    </section>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { TodoProvider } from './components/TodoContext';\nimport { TodoForm } from './components/TodoForm';\n\nexport const App = () => (\n  <TodoProvider>\n    <Routes>\n      <Route path=\"/\" element={<TodoForm />}>\n        <Route path=\":status\" element={<TodoForm />} />\n      </Route>\n    </Routes>\n  </TodoProvider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}